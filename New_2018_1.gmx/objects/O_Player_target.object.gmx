<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_target</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-961</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xscale = 1;

target = noone;
target2 = noone;
target3 = noone;
target_check = 0;

target_plus = 15;

target_distance = 0;
target_distance_2 = 0;

_image_angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 타겟 위치 
x = mouse_x;
y = mouse_y;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if O_PAD._M_Right == 1{
if xscale == -1{
//x = O_Player.x + 100;
}
xscale = 1;
}
if O_PAD._M_Left == 1{
if xscale == 1{
//x = O_Player.x - 100;
}
xscale = -1;
}

if collision_circle(O_Player.x,O_Player.y,O_Player_Stick.range_max,self,1,0){
if target == noone &amp;&amp; target2 == noone &amp;&amp; target3 == noone{
target_check = 1;
x += floor(((O_Player.x + (100 * xscale))-x)/5);
y += floor(((O_Player.y)-y)/5);
}
}else{
x += floor(((O_Player.x + (100 * xscale))-x)/5);
y += floor(((O_Player.y)-y)/5);
target_check = 0;
}

if !collision_circle(O_Player.x,O_Player.y,O_Player_Stick.range_max,O_ENEMY_P,1,0){
target = noone;
target2 = noone;
target3 = noone;

x += floor(((O_Player.x + (100 * xscale))-x)/5);
y += floor(((O_Player.y)-y)/5);
target_check = 0;
}

if collision_circle(O_Player.x,O_Player.y,O_Player_Stick.range_max / (target_plus + 2),O_ENEMY_P,1,0) &amp;&amp; target_check == 1
{
target2 = collision_circle(O_Player.x,O_Player.y,O_Player_Stick.range_max / (target_plus + 2),O_ENEMY_P,1,0);
target_distance_2 = point_distance(x,y,target2.x,target2.y);
}
else{
if collision_circle(O_Player.x,O_Player.y,O_Player_Stick.range_max / (target_plus),O_ENEMY_P,1,0) &amp;&amp; target_check == 1
{
target_distance_2 = 0;
target = collision_circle(O_Player.x,O_Player.y,O_Player_Stick.range_max / (target_plus),O_ENEMY_P,1,0);
target_distance = point_distance(x,y,target.x,target.y);

if target_plus &lt; 15 {
target_plus += 0.5;
}
}
else{
target_distance_2 = 0
if target_plus &gt; 1 {
target_plus -= 0.5;
}else{
target_plus = 15;
}
}
}
if instance_exists(target2)
{
if target2.x &lt;= O_Player.x + O_Player_Stick.range_max + 5
&amp;&amp; target2.x &gt;= O_Player.x - O_Player_Stick.range_max - 5
&amp;&amp; !collision_line(x,y,target2.x,target2.y-32,O_Block_Parent,1,0){
x += floor(((target2.x)-x)/10);
y += floor(((target2.y)-y)/10);
}else{
target2 = noone;
}
}
else{
if instance_exists(target) &amp;&amp; target_distance_2 == 0
{
if target.x &lt;= O_Player.x + O_Player_Stick.range_max + 5
&amp;&amp; target.x &gt;= O_Player.x - O_Player_Stick.range_max - 5
&amp;&amp; !collision_line(x,y,target.x,target.y-32,O_Block_Parent,1,0){
x += floor(((target.x)-x)/10);
y += floor(((target.y)-y)/10);
}else{
target = noone;
}
}
else{
target = noone;
target2 = noone;
}
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
for(i=0;i&lt;10;i++){
it = instance_create(O_Player.x,O_Player.y,OBJ_MAGIC_BALL);
it._enemy_angle = i*40;
it.image_angle = i*40;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
with(O_Player_Stick){
if _attack_Delay &lt;= 0 &amp;&amp; (_attack_Delay_2 &lt;= 0)
&amp;&amp; (_attack_Delay_3 &lt;= 0) &amp;&amp; _long_stick == 0
{
angle_minus = 0;
if instance_exists(O_Player_Stick_2){
O_Player_Stick_2._attack_Delay_2 = O_Player_Stick_2._attack_Delay_max-O_Player_Stick_2._attack_Delay_max/2;
}
check_x = O_Player_target.x
check_y = O_Player_target.y
check_xscale = _xscale;
check_x_pos = x;
check_y_pos = y;
_attack_Delay = _attack_Delay_max;
_attack_Delay_2 = 0;
_attack_normal_angle = 0;
}
else if _attack_Delay_2 &lt;= 0 
&amp;&amp; _attack_Delay &lt;= _attack_Delay_max - _attack_delay_next
&amp;&amp; (_attack_Delay_3 &lt;= 0) &amp;&amp; _long_stick == 0
{
if _gun == 1{
with(O_Player_Stick_2){
if _attack_Delay &lt;= 0 &amp;&amp; ((_attack_Delay_2 &lt;= _attack_Delay_max &amp;&amp; _long_sword == 1)
|| (_attack_Delay_2 &lt;= 0 &amp;&amp; _gun == 1)){
//image_angle = (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale))
check_x = O_Player_target.x
check_y = O_Player_target.y
check_xscale = _xscale;
check_x_pos = x;
check_y_pos = y;

_attack_Delay = _attack_Delay_max;
_attack_Delay_2 = 0;
with(O_Player_Stick){
_attack_Delay_2 = _attack_Delay_max/2;
}
}
}
}else if _AR_gun == 0 &amp;&amp; _SG_gun == 0 &amp;&amp; _GU_weapon == 0{
_attack_Delay_2 = _attack_Delay_max;
_attack_Delay_3 = 0;
}
}
else if _attack_Delay_3 &lt;= 0 
&amp;&amp; _attack_Delay_2 &lt;= _attack_Delay_max_2 - _attack_delay_next
&amp;&amp; _attack_Delay &lt;= _attack_Delay_max - _attack_delay_next
{
if _long_knife == 1 || _long_stick == 1{
_attack_Delay_3 = _attack_Delay_max_3;
//_attack_Delay = 0;
}
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,x,y,1,1,0,c_white,1);

//draw_circle_colour(O_Player.x,O_Player.y,O_Player_Stick.range_max / target_plus,c_red,c_red,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
