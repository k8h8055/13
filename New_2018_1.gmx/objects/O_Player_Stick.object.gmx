<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_weapon_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-165</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MyMaster = noone;
MyClone = noone;
_xscale = 1;

_rot = -5;

_rot_check = 1;

_rot_on = 0;

_rot_scale = 0;
randomize();
_Weapon_switch = -1;//irandom(4);

_long_sword = 0;
_long_knife = 0;
_sword = 0;
_gun = 0;
_AR_gun = 0;
_SG_gun = 0;
_GU_weapon = 0;

_xpos = 0;
_xpos_save = 0;
_ypos = 0;
_ypos_save = 0;

_attack = 0;
_attack_2 = 0;

_attack_Delay = 0;
_attack_Delay_max = 60
_attack_Delay_2 = 0;
_attack_Delay_max_2 = 60;
_attack_Delay_3 = 0;
_attack_Delay_max_3 = 60;

_attack_normal_angle = 0;

_attack_delay_next = 15;

_attack_angle = 0;
_attack_angle_2 = 0;
_attack_angle_3 = 0;
_atttack_total = 0;
check_x = 0;
check_y = 0;

check_x_pos = 0;
check_y_pos = 0;

check_xscale = 1;

eff_delay = 0;

angle = 0;

range_max = 200;
angle_speed = 4;

Weapon_hand = 0;

img_scales = 1;

_ypos_index = 0;
no_rot = 0;

weapon_wheel_delay = 0;

check_id = noone;

angle_minus = 0;

_angles = 0;

_angles2 = 0;

img_weapon_scale = 1;

_Att = 1;

skill_knife_check = 0;
_reload = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 총 탄약수 
_bullet_delay = 0;
for(i=0;i&lt;2;i++){
_bullet[i] = 1;
_bullet_max[i] = 1;
}
bullet_max = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>11</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 총 탄약수 
_bullet_delay = 0;
for(i=0;i&lt;2;i++){
switch(global.inv_eqmWeapon_ui[i,0]){
case 0 : //sprite_index = spr_weapon_1;
_bullet_max[i] = 1;
break;
case 1 : //sprite_index = spr_gun_1;
_bullet_max[i] = 16;
break;
case 2 : //sprite_index = spr_AR_gun_1;
_bullet_max[i] = 48;
break;
case 3 : //sprite_index = spr_SG_gun_1;
_bullet_max[i] = 5;
break;
case 4 : //sprite_index = spr_RAM_GU;
_bullet_max[i] = 1;
break;
case 5 : //sprite_index = spr_long_knife;
_bullet_max[i] = 1;
break;
case 6 : //sprite_index = spr_AR_gun_2;
_bullet_max[i] = 32;
break;
default : _bullet_max[i] = 1;
break;
}
_bullet[i] = _bullet_max[i];
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _attack_Delay &gt; 0 &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0{
audio_play_sound(att_AR_gun_at_0_wv,0,0);
/*
if MyMaster._xspd &gt; 0{
is = instance_create(x+lengthdir_x(sprite_width/2+MyMaster.xscale*5,image_angle-check_xscale*10)
+_xpos+MyMaster._xspd*5,
y+lengthdir_y(sprite_width/2,image_angle)+_ypos-10,O_FIRE_ATT_AR_M);
}
*/
//else{
var _image_ang = point_direction(x,y,O_Player_target.x,O_Player_target.y);//-(_rot_on - _rot_scale)
is = instance_create(x+lengthdir_x(sprite_width*0.5,image_angle+_xscale*5)+MyMaster._xspd*2,
y+image_xscale * lengthdir_y(sprite_width*0.5,_xscale*image_angle + 5),O_FIRE_ATT_AR_M);
//}
is._dir = 1;
if _attack_Delay &gt; _attack_Delay_max - 2
is.image_angle = _image_ang;
else{
randomize();
is.image_angle = _image_ang + choose(1,-1)*random(3);
}
is.Damage = irandom_range(round(global._WeaponPower*0.8),round(global._WeaponPower*1.2));

_xpos -= (0.1);
//_ypos = 0.01;
no_rot += 2;
MyMaster.rot += _xscale*(4) ;
alarm[1] = 5;
_bullet[OBJ_Inv_UI._eqmWeapon_save] -= 1;
_attack_Delay -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = MyMaster.x;
y = MyMaster.y;
skill_knife_check = 0;
_attack_angle_3 = 0;
_attack_Delay_max_3 = -1;

target_position_x = x;
target_position_y = y;

_long_sword = 0;
_long_stick = 0;
_long_knife = 0;
_sword = 0;
_gun = 0;
_AR_gun = 0;
_SG_gun = 0;
_GU_weapon = 0;
_ypos_index = 0;

bullet_max = 1;
_bullet_delay = 0;

switch(MyMaster.character){
case 4 : _ypos_index = 5;break;
}

switch(_Weapon_switch){
case 0 : sprite_index = spr_weapon_1;
skill_knife_check = 1;
_long_stick = 1;
_Att = 10;
global._WeaponPower = 10;
_attack_angle = 220;
_attack_angle_2 = -45;
_attack_angle_3 = 0;

_attack_Delay_max = 60;
_attack_Delay_max_2 = 60;
_attack_Delay_max_3 = 60;

_attack_delay_next = 25;

range_max = 200;

_xpos = 0;
_ypos = 10;
_rot_on = 90;
angle_speed = 5;
break;
/*
case 0 : sprite_index = spr_weapon_1;
_long_sword = 1;
_Att = 10;
_attack_angle = 220;
_attack_angle_2 = -45;
_attack_Delay_max = 40
_attack_Delay_max_2 = 40;
_attack_delay_next = (40)-1;

range_max = 200;

_xpos = 0;
_ypos = 10;
_rot_on = -40;
angle_speed = 5;
break;
*/

case 1 : sprite_index = spr_gun_1;
MyClone = instance_create(x,y,O_Player_Stick_2);
MyClone._xscale = _xscale;
MyClone.image_angle = image_angle;
//it._Weapon_switch = _Weapon_switch;
_gun = 1;
_Att = 5;
global._WeaponPower = 5;
_attack_angle = -25;
_attack_angle_2 = 0;
_attack_Delay_max = 30;
_attack_Delay_max_2 = 15;
_attack_delay_next = 15;
range_max = 400;
_xpos = 2;
_ypos = 8;
_rot_on = 0;
angle_speed = 4;
bullet_max = 16;
break;
case 2 : sprite_index = spr_AR_gun_1;
_AR_gun = 1;
_Att = 3;
global._WeaponPower = 3;
_attack_angle = -10;
_attack_angle_2 = 0;
_attack_Delay_max = 35;
_attack_Delay_max_2 = 10;
range_max = 400;
_xpos = -6;
_ypos = 14;
_rot_on = 10;
angle_speed = 20;
bullet_max = 48;
break;

case 3 : sprite_index = spr_SG_gun_1;
_SG_gun = 1;
_Att = 15;
global._WeaponPower = 15;
_attack_angle = -60;
_attack_angle_2 = 0;
_attack_Delay_max = 60;
_attack_Delay_max_2 = 60;
range_max = 400;
_xpos = -2;
_ypos = 12;
_rot_on = 15;
angle_speed = 5;
bullet_max = 5;
break;

case 4 : sprite_index = spr_RAM_GU;
_GU_weapon = 1;
_Att = 4;
global._WeaponPower = 4;
_attack_angle = -60;
_attack_angle_2 = 0;

_attack_Delay_max = 60;
_attack_Delay_max_2 = 60;

range_max = 400;
_xpos = -20;
_ypos = 14;
_rot_on = 0;
angle_speed = 15;
break;
case 5 : sprite_index = spr_long_knife;
skill_knife_check = 1;
_long_knife = 1;

_Att = 6;
global._WeaponPower = 6;

_attack_angle = 200;
_attack_angle_2 = 0;
_attack_angle_3 = 180;

_attack_Delay_max = 50;
_attack_Delay_max_2 = 50;
_attack_Delay_max_3 = 50;

_attack_delay_next = 25;

range_max = 200;

_xpos = 5;
_ypos = 12;
_rot_on = -91;
angle_speed = 5;
break;

case 6 : sprite_index = spr_AR_gun_2;
_AR_gun = 1;
_Att = 3;
global._WeaponPower = 3;
_attack_angle = -10;
_attack_angle_2 = 0;
_attack_Delay_max = 35;
_attack_Delay_max_2 = 10;
range_max = 400;
_xpos = -10;
_ypos = 15;
_rot_on = 0;
angle_speed = 20;
bullet_max = 32;
break;
}
_ypos_save = _ypos;
_xpos_save = _xpos;

_bullet_max[OBJ_Inv_UI._eqmWeapon_save] = bullet_max;
_xscale = MyMaster.xscale;

if _xscale == 1{
_rot_scale = 0;
image_angle = (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale))
}
else if _xscale == -1{
_rot_scale = _rot_on + (_rot_on + 180);
image_angle = (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale))
}

//image_angle = point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(_GU_weapon == 1 &amp;&amp; _attack_Delay &gt; 0){
if MyMaster._xspd == 0{ 
x = MyMaster.x+(_xpos * _xscale);}
else{
x = MyMaster.x+(_xpos * _xscale) + MyMaster._xspd;
}
y = MyMaster.y+_ypos + _ypos_index;
}
else{
if (_GU_weapon == 1 &amp;&amp; _attack_Delay &lt; _attack_Delay_max - 30){
x += ((MyMaster.x+(_xpos * _xscale)) - x) / 5;
y += ((MyMaster.y+_ypos+_ypos_index) - y) / 5;
if img_weapon_scale &gt; 1
img_weapon_scale -= 0.3;
else
img_weapon_scale = 1;

}
}

_xpos += (_xpos_save - _xpos)/30;
_ypos += (_ypos_save - _ypos)/30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>_Weapon_switch</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global._hp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 기본 움직임 
_xscale = MyMaster.xscale;

if _attack_Delay &lt;= 0 &amp;&amp; _attack_Delay_2 &lt;= 0 &amp;&amp; _attack_Delay_3 == 0 || _attack_normal_angle &gt; 0{

if _xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180)){
_rot_scale = 0;

image_angle = (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale))
}
if _xscale == -1 &amp;&amp; (_rot_scale == 0){
_rot_scale = _rot_on + (_rot_on + 180);
image_angle = (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale))
}

if image_angle - (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot) &gt;= 270 &amp;&amp; 0 &gt; ((point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot) - image_angle)/2{
image_angle -= 360;
}
else{
if (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot) - image_angle &gt;= 270 &amp;&amp; 0 &lt; ((point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot) - image_angle)/2{
image_angle += 360;
}
}

image_angle += ((point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot) - image_angle)/2;



if _rot_check == 1 &amp;&amp; _rot &lt; 5{
//_rot += 0.1;
}else{
_rot_check = 2;
}

if _rot_check == 2 &amp;&amp; _rot &gt; -5{
//_rot -= 0.1;
}else{
_rot_check = 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 어택 움직임 

if _attack_Delay_3 &gt; 0{
if _gun == 0 &amp;&amp; _AR_gun = 0 &amp;&amp; _SG_gun = 0{
_xscale = MyMaster.xscale;
check_x = O_Player_target.x
check_y = O_Player_target.y
check_x_pos = x;
check_y_pos = y;
check_xscale = _xscale;
if _attack_Delay_3 &gt; _attack_Delay_max_3 / 2{
if _xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180)){
_rot_scale = 0;
check_xscale = _xscale;
if _long_sword == 1 || _long_knife == 1
image_angle = image_angle + 180;
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3));
}
if _xscale == -1 &amp;&amp; (_rot_scale == 0){
_rot_scale = _rot_on + (_rot_on + 180);
check_xscale = _xscale;
if _long_knife == 1
image_angle = image_angle - 180;
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3));
}

if image_angle - (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3)) &gt;= 270 &amp;&amp; 0 &gt; ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3)) - image_angle)/(1){
image_angle -= 360;
}
else{
if (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3)) - image_angle &gt;= 270 &amp;&amp; 0 &lt; ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3)) - image_angle)/(1){
image_angle += 360;
}
}

image_angle += ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_3)) - image_angle)/(1)
}else{
_attack_normal_angle = 1;
}


if _attack_Delay_max_3 == _attack_Delay_3 &amp;&amp; (_long_knife == 1 || _long_stick == 1){

_xpos += lengthdir_x((sprite_width * sprite_height)/35,point_direction(x,y,O_Player_target.x,O_Player_target.y));
_ypos += _xscale * lengthdir_y((sprite_width * sprite_height)/35,point_direction(x,y,O_Player_target.x,O_Player_target.y));
//image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2));
var _att_dir = (point_direction(x,y, O_Player_target.x,O_Player_target.y));
audio_play_sound(att_sword_swing_wv,0,0);
if skill_knife_check == 1{
if _long_stick == 1{
IT = instance_create(x+MyMaster._xspd*2,
y,O_Player_Stick_meff);
}else{
IT = instance_create(x+lengthdir_x(sprite_height*0.5,_att_dir)+MyMaster._xspd*2,
y+lengthdir_y(sprite_height*0.5,_att_dir),O_Player_Stick_meff);
}
IT._xscale = _xscale;
IT.image_angle = _att_dir
IT._Weapon_switch = _Weapon_switch;
IT._Weapon_ATTACK = 1;
IT.Mymaster = self;
if _long_stick == 1
IT._speed_max = 24 + 1 * sqrt((MyMaster._xspd * MyMaster._xspd) + (MyMaster._yspd * MyMaster._yspd));

}
else{
if instance_place(x, y , O_ENEMY_P){
with(instance_place(x, y, O_ENEMY_P)){
if !place_meeting(x,y,check_id){
check_id = other.id;
x_pos_go += 2;
x_pos_max = other._xscale*32;
Damage = 10;
_HP -= irandom_range(round(global._WeaponPower*0.8),round(global._WeaponPower*1.2));
Damage_eff = 1;
audio_play_sound(att_sword_0_wv,0,0);
}
}
}
if instance_place(x, y , o_collision_parent){
with(instance_place(x, y, o_collision_parent)){
_HP -= 1;
_delay = 10;
}
audio_play_sound(att_sword_0_wv,0,0);
}

}
MyMaster.rot += _xscale * -30;
}
}
}
else if _attack_Delay_2 &gt; 0{
if _gun == 1{
_xscale = MyMaster.xscale;

if _xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180)){
_rot_scale = 0;
check_xscale = _xscale;
if _long_sword == 1 || _long_knife == 1
image_angle = image_angle + 180;
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2));
}

if _xscale == -1 &amp;&amp; (_rot_scale == 0){
_rot_scale = _rot_on + (_rot_on + 180);
check_xscale = _xscale;

if _long_sword == 1 || _long_knife == 1
image_angle = image_angle - 180;
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2));
}

if image_angle - (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale)) &gt;= 270 &amp;&amp; 0 &gt; ((point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale)) - image_angle)/angle_speed{
image_angle -= 360;
}
else{
if (point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale)) - image_angle &gt;= 270 &amp;&amp; 0 &lt; ((point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale)) - image_angle)/angle_speed{
image_angle += 360;
}
}

image_angle += ((point_direction(x,y,O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale)) - image_angle)/angle_speed;
}

if _gun == 0 &amp;&amp; _AR_gun = 0 &amp;&amp; _SG_gun = 0{
_xscale = MyMaster.xscale;
check_x = O_Player_target.x
check_y = O_Player_target.y
check_x_pos = x;
check_y_pos = y;
check_xscale = _xscale;

if _xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180)){
_rot_scale = 0;
check_xscale = _xscale;
if _long_sword == 1 || _long_knife == 1
image_angle = image_angle + 180;
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2));
}

repeat(5){
if _xscale == -1 &amp;&amp; (_rot_scale == 0){
_rot_scale = _rot_on + (_rot_on + 180);
check_xscale = _xscale;
if _long_sword == 1 || _long_knife == 1
image_angle = image_angle - 180;
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2));
}

if image_angle - (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2)) &gt;= 270 &amp;&amp; 0 &gt; ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2)) - image_angle)/(angle_speed*1){
image_angle -= 360;
}
else{
if (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2)) - image_angle &gt;= 270 &amp;&amp; 0 &lt; ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2)) - image_angle)/(angle_speed*1){
image_angle += 360;
}
}

image_angle += ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle_2)) - image_angle)/(angle_speed*1)

if _attack_Delay_2 &gt; _attack_Delay_max_2 - 8{
if !(_xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180)))
&amp;&amp; !(_xscale == -1 &amp;&amp; (_rot_scale == 0)){

it2 = instance_create(x,y,O_Player_Stick_eff);
it2.MyMaster = self;
it2.sprite_index = sprite_index;
it2.angles = image_angle;
it2.image_xscale = _xscale;
it2._Weapon_switch = _long_sword * _long_knife;

}
if _long_sword == 1 || _long_knife == 1{
if instance_place(x, y , O_ENEMY_P){
with(instance_place(x, y, O_ENEMY_P)){
if !place_meeting(x,y,check_id){
check_id = other.id;
x_pos_go += 2;
x_pos_max = other._xscale*32;
Damage = 10;
_HP -= irandom_range(round(global._WeaponPower*0.8),round(global._WeaponPower*1.2));
Damage_eff = 1;
audio_play_sound(att_sword_0_wv,0,0);
}
}
}
if instance_place(x, y , o_collision_parent){
with(instance_place(x, y, o_collision_parent)){
_HP -= 1;
_delay = 10;
}
audio_play_sound(att_sword_0_wv,0,0);
}
}

}
}
if _attack_Delay_max_2 == _attack_Delay_2 &amp;&amp; (_long_sword == 1 || _long_knife == 1){
//image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle));
audio_play_sound(att_sword_swing_wv,0,0);
MyMaster.rot += _xscale * 20;
}
}

}
else if _attack_Delay &gt; 0{
_xscale = MyMaster.xscale;

check_x = O_Player_target.x
check_y = O_Player_target.y
check_x_pos = x;
check_y_pos = y;
check_xscale = _xscale;
repeat(5){

if _xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180)){
_rot_scale = 0;
check_xscale = _xscale;
if _long_sword == 1 || _long_knife == 1{
image_angle = image_angle + 180;
}
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle));
}

if _xscale == -1 &amp;&amp; (_rot_scale == 0){
_rot_scale = _rot_on + (_rot_on + 180);
check_xscale = _xscale;

if _long_sword == 1 || _long_knife == 1{
image_angle = image_angle - 180;
}
else
image_angle = (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle));
}

if image_angle - (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle)) &gt;= 270 &amp;&amp; 0 &gt; ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle)) - image_angle)/(angle_speed*1){
image_angle -= 360;
}
else{
if (point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle)) - image_angle &gt;= 270 &amp;&amp; 0 &lt; ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle)) - image_angle)/(angle_speed*1){
image_angle += 360;
}
}


if !(_attack_Delay &lt; _attack_Delay_max/2 &amp;&amp; _SG_gun == 1) &amp;&amp; _GU_weapon == 0 || (((!(_attack_Delay &lt; _attack_Delay_max/2) &amp;&amp; _SG_gun == 1) || _AR_gun == 1 || _gun == 1) &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0){
image_angle += ((point_direction(check_x_pos,check_y_pos, check_x,check_y)-(_rot_on - _rot_scale) - (check_xscale *_attack_angle)) - image_angle)/(angle_speed*1)
}

if (_attack_Delay &lt; _attack_Delay_max/2  &amp;&amp; _SG_gun == 1){
image_angle += ((point_direction(x,y,O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale)) - image_angle)/(angle_speed*1);
}


if _attack_Delay &gt; _attack_Delay_max-8{
if (_SG_gun = 0 &amp;&amp; _AR_gun = 0){
if _gun == 1 &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0{
_xpos -= _xscale*0.2 * 0.01;
_ypos -= 0.2 * 0.01;
}
}
//if (!(_xscale == 1 &amp;&amp; (_rot_scale == _rot_on + (_rot_on + 180))) &amp;&amp; !(_xscale == -1 &amp;&amp; (_rot_scale == 0))){
it2 = instance_create(x,y,O_Player_Stick_eff);
it2.MyMaster = self;
it2.sprite_index = sprite_index;
it2.angles = image_angle;
it2.image_xscale = _xscale;
it2._Weapon_switch = _long_sword * _long_knife;
//}
if _long_sword == 1 || _long_knife == 1{
if instance_place(x, y , O_ENEMY_P){
with(instance_place(x, y, O_ENEMY_P)){
if !place_meeting(x,y,check_id){
check_id = other.id;
x_pos_go += 2;
x_pos_max = other._xscale*32;
Damage = 10;
_HP -= other._Att;
Damage_eff = 1;
audio_play_sound(att_sword_0_wv,0,0);
}
}
}

if instance_place(x, y , o_collision_parent){
with(instance_place(x, y, o_collision_parent)){
_HP -= 1;
_delay = 10;
}
audio_play_sound(att_sword_0_wv,0,0);
}

}

}


}

if _attack_Delay_max == _attack_Delay{
if _SG_gun == 1 &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0{
WeaponSG(self,MyMaster,image_xscale,O_Player_target);
_bullet[OBJ_Inv_UI._eqmWeapon_save] -= 1;
}
else if _AR_gun = 1 &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0{
no_rot = 0;
if _xscale == 1
image_angle = point_direction(x,y,O_Player_target.x,O_Player_target.y)
else
image_angle = point_direction(x,y,O_Player_target.x,O_Player_target.y)+180;

alarm[1] = 2;
}
else{
if _gun == 1 &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0{
WeaponNGun(self,MyMaster,image_xscale,O_Player_target);
_bullet[OBJ_Inv_UI._eqmWeapon_save] -= 1;
}
else if _GU_weapon == 1{
MyMaster.rot -= _xscale * 20;
target_position_x = O_Player_target.x;
target_position_y = O_Player_target.y;
audio_play_sound(att_sword_swing_wv,0,0);
}
else{
//image_angle = ((point_direction(x,y, O_Player_target.x,O_Player_target.y)-(_rot_on - _rot_scale) - _rot) - image_angle);
audio_play_sound(att_sword_swing_wv,0,0);
MyMaster.rot -= _xscale * 20;
}



}
}
if _GU_weapon == 1 &amp;&amp; _attack_Delay &gt; _attack_Delay_max - 10{
x += (target_position_x - x)/5;
y += (target_position_y - y)/5;
if img_weapon_scale &lt; 6{
img_weapon_scale += 0.15;
}
}
else if _GU_weapon == 1{
if img_weapon_scale &lt; 6{
img_weapon_scale += 0.15;
}
}
if _GU_weapon == 1{
/*
if collision_line(x,y,x+(target_position_x - x)/6,y+(target_position_y - y)/6,O_Block_Parent,1,0){
if _attack_Delay &gt; _attack_Delay_max - 40{
_attack_Delay = _attack_Delay_max - 40;
}
target_position_x = ((MyMaster.x+(_xpos * _xscale)));
target_position_y = (MyMaster.y+_ypos);
}
*/
if instance_place(x,y,O_ENEMY_P){
with(instance_place(x,y,O_ENEMY_P)){
if Damage &lt;= 0{
O_Camera.screenShake = 3;
audio_play_sound(att_sword_1_wv,0,0);
_HP -= other._Att;
x_pos_max += xscale * 2;
x_pos_go = 2;
Damage = 10;
_Jumping_damage = 1;
}
}
}

if instance_place(x, y , o_collision_parent){
with(instance_place(x, y, o_collision_parent)){
_HP -= 1;
_delay = 10;
}
audio_play_sound(att_sword_0_wv,0,0);
}

image_angle += 40;
}
}
else{
if img_weapon_scale &gt; 1
img_weapon_scale -= 0.3;
else
img_weapon_scale = 1;
}
if _attack_Delay &gt; _attack_Delay_max-20 &amp;&amp; _attack_Delay &lt; _attack_Delay_max{
if (_SG_gun = 0 &amp;&amp; _AR_gun = 0){
if _gun == 1 &amp;&amp; _bullet[OBJ_Inv_UI._eqmWeapon_save] &gt; 0{
_xpos -= _xscale*0.2;
_ypos -= 0.2;
}
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _attack_Delay &gt; 0{
with(MyMaster){_attackings = 60;}
_attack_Delay -= 1;
}
if _attack_Delay_2 &gt; 0{
with(MyMaster){_attackings = 60;}
_attack_Delay_2 -= 1;
}
if _attack_Delay_3 &gt; 0{
with(MyMaster){_attackings = 60;}
_attack_Delay_3 -= 1;
}

if eff_delay &gt; 0{
eff_delay -= 1;
}

img_scales += (1 - img_scales)/10;

if weapon_wheel_delay &gt; 0
weapon_wheel_delay -= 1;

//image_angle = _angles;

//_angles2 += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global._hp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _attack_Delay &lt;= 0 &amp;&amp; _attack_Delay_2 &lt;= 0 &amp;&amp; _attack_Delay_3 &lt;= 0 &amp;&amp; weapon_wheel_delay &lt;= 0{ 
if OBJ_Inv_UI._eqmWeapon_save == 0{
if global.inv_eqmWeapon_ui[1,0] != -1{
if instance_exists(O_Player_Stick){
if instance_exists(MyClone)
with(MyClone){instance_destroy();}
_Weapon_switch = global.inv_eqmWeapon_ui[1,0];
alarm[0] = 1;
img_scales = 0;
audio_play_sound(Weapon_change_wv,0,0);
OBJ_Inv_UI._eqmWeapon_save = 1;
}
}
}
else{
if global.inv_eqmWeapon_ui[0,0] != -1{
if instance_exists(O_Player_Stick){
if instance_exists(MyClone)
with(MyClone){instance_destroy();}
_Weapon_switch = global.inv_eqmWeapon_ui[0,0];
alarm[0] = 1;
img_scales = 0;
audio_play_sound(Weapon_change_wv,0,0);
OBJ_Inv_UI._eqmWeapon_save = 0;
}
}
}
weapon_wheel_delay = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global._hp</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _attack_Delay &lt;= 0 &amp;&amp; _attack_Delay_2 &lt;= 0 &amp;&amp; _attack_Delay_3 &lt;= 0 &amp;&amp; weapon_wheel_delay &lt;=0{
if OBJ_Inv_UI._eqmWeapon_save == 0{
if global.inv_eqmWeapon_ui[1,0] != -1{
if instance_exists(O_Player_Stick){
if instance_exists(MyClone)
with(MyClone){instance_destroy();}
_Weapon_switch = global.inv_eqmWeapon_ui[1,0];
alarm[0] = 1;
img_scales = 0;
audio_play_sound(Weapon_change_wv,0,0);
OBJ_Inv_UI._eqmWeapon_save = 1;
}
}
}
else{
if global.inv_eqmWeapon_ui[0,0] != -1{
if instance_exists(O_Player_Stick){
if instance_exists(MyClone)
with(MyClone){instance_destroy();}
_Weapon_switch = global.inv_eqmWeapon_ui[0,0];
alarm[0] = 1;
img_scales = 0;
audio_play_sound(Weapon_change_wv,0,0);
OBJ_Inv_UI._eqmWeapon_save = 0;
}
}
}

weapon_wheel_delay = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>_Weapon_switch</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>4</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,x,y,_xscale*img_scales*img_weapon_scale ,1*img_scales*img_weapon_scale ,image_angle,c_white,1);

image_xscale = _xscale*img_scales*img_weapon_scale;
image_yscale = 1*img_scales*img_weapon_scale;

if _bullet[OBJ_Inv_UI._eqmWeapon_save] &lt;= 0 || _reload == 1{
if _bullet_delay &lt; _bullet_max[OBJ_Inv_UI._eqmWeapon_save]{
_bullet_delay += (bullet_max/60);
draw_sprite_ext(spr_reload_bar,0,MyMaster.x,MyMaster.y-48,1,1,0,c_white,1);
draw_sprite_ext(spr_reload_bar_1,0,
MyMaster.x - 64/2 + (_bullet_delay * 1/_bullet_max[OBJ_Inv_UI._eqmWeapon_save])*64,
MyMaster.y-48,1,1,0,c_white,1);
}
else{
_bullet[OBJ_Inv_UI._eqmWeapon_save] = _bullet_max[OBJ_Inv_UI._eqmWeapon_save];
_bullet_delay = 0;
audio_play_sound(Weapon_change_wv,0,0);
_reload = 0;
}
}

/*
draw_set_font(font0)
draw_text_colour(x,y-80,string(image_angle),c_red,c_red,c_red,c_red,1);
draw_text_colour(x,y-40,string(_xscale),c_red,c_red,c_red,c_red,1);
draw_text_colour(x,y+40,string(image_xscale),c_red,c_red,c_red,c_red,1);
draw_text_colour(x,y+80,string(check_xscale),c_red,c_red,c_red,c_red,1);
*/
//draw_set_font(font0)
//draw_text_colour(x,y,string(image_angle+_rot),c_red,c_red,c_red,c_red,1);
/*
draw_rectangle_colour(
x+lengthdir_x(sprite_height*1.2,image_angle+90),
y+lengthdir_y(sprite_height*1.5,image_angle+90),
x,
y,
c_red,c_red,c_red,c_red,0);

//draw_rectangle(x,y,x+lengthdir_x(sprite_height,image_angle+90),y+lengthdir_y(sprite_height,image_angle+90),0)
/*
draw_circle(x+_xscale*lengthdir_x(sprite_width*1.5,image_angle+_xscale*5)+O_Player._xspd*2,
y+lengthdir_y(sprite_width*1.5,_xscale*image_angle+_xscale*5),120,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
