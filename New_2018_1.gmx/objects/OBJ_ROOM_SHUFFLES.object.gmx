<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 스테이지 셔플 
end_checking = 0;
no_check = 0;

var cp_on = 0;

global.room_numbers = irandom_range(0,8);

global.room_names_st = 0;

number_c = global.room_numbers;

for(c=0;c&lt;18;c++){
global.room_number_on[c] = -1;
}
for(d=0;d&lt;10;d++){
global.room_number_name[d] = -1;
}
global.room_number_on[0] = global.room_numbers;
cp = 1;
shuffle_on = 0;
_cp_success = 0;
_cp_check = 0;



list = ds_list_create();    // 리스트를 생성합니다. list라는변수가 이 리스트의 아이디입니다.

var i;
i = 1;

repeat( 9 )                 //밑의 내용을 49번 반복합니다.
{
randomize(); 
ds_list_add(list, i)          // i의 값을 리스트에 추가합니다.
i = i + 1                      // i의 값이 1씩 증가합니다.
}

randomize(); 
ds_list_shuffle(list) 

//target = ds_list_find_value(list, 0)
list_on = 0;
list_name = 0;
for(h=0;h&lt;3;h++){
for(w=0;w&lt;6;w++){
global.room_stage[h,w] = list_on;//ds_list_find_value(list, list_on);
list_on += 1;
}
}
for(d=0;d&lt;9;d++){
global.room_number_name[d] = ds_list_find_value(list, list_name);
list_name += 1;
}
//ds_list_destroy(list);

ocs = 0;

for(cd=0;cd&lt;18;cd++){
//if (global.room_number_name[ocs]) &gt; 0{
global.room_number_on_n[cd] = 0;
//}
}
global.room_number_name[8] = 10;
//global.room_number_on_n[global.room_numbers] = 1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if end_checking == 1 || no_check &gt; 10{
instance_create(0,0,O_POP_DOWN_NORMAL);
}
else{
alarm[0] = 5;
no_check += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(cp){
if (global.room_number_on[cp] == -1)
{
for(i=1;i&lt;3;i++){
if (number_c == 5+((i-1)*6)){
if i == 3
_cp_check = (number_c) + choose(-1,-6);
else if i == 1
_cp_check = (number_c) + choose(-1,6);
else if i == 2
_cp_check = (number_c) + choose(-1,-6,6);
}
else if (number_c == ((i-1)*6)){
if i = 3
_cp_check = (number_c) + choose(1,-6);
else if i = 1
_cp_check = (number_c) + choose(1,6);
else if i = 2
_cp_check = (number_c) + choose(1,-6,6);
}
else if (number_c &lt; 5) &amp;&amp; (number_c &gt; 0)
_cp_check = (number_c) + choose(-1,1,6);
else if (number_c &gt; 12) &amp;&amp; (number_c &lt; 17)
_cp_check = (number_c) + choose(-1,1,-6);
else if (number_c &gt; 6) &amp;&amp; (number_c &lt; 11)
_cp_check = (number_c) + choose(-1,1,-6,6);
}
for(_cp=(9);_cp&gt;0;_cp--){
if global.room_number_on[_cp] == _cp_check &amp;&amp; _cp_success == 0{
if global.room_number_on[shuffle_on] &gt; -1{
number_c = global.room_number_on[shuffle_on];
}
if shuffle_on &lt; 8{
shuffle_on += 1;
}else{
shuffle_on = 0;
}
_cp_success = -1;
_cp = 0;
}

}

for(_cp=0;_cp&lt;9;_cp++){
if global.room_number_on[_cp] == _cp_check &amp;&amp; _cp_success == 0{
if global.room_number_on[shuffle_on] &gt; -1{
number_c = global.room_number_on[shuffle_on];
}
if shuffle_on &lt; 8{
shuffle_on += 1;
}else{
shuffle_on = 0;
}
_cp_success = -1;
_cp = 0;
}

}

if _cp_success == 0{
global.room_number_on[cp] = _cp_check;
number_c = global.room_number_on[cp];
list += 1;
if cp &lt; 8{
cp++;
}
else{
end_checking = 1;
cp = 1;
}
}

_cp_success = 0;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
