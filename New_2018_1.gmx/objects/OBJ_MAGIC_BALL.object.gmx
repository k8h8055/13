<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_RAM_GU</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_enemy_angle = 0;

_speed = 10;

_die = 0;

_eff = 0;

TARGET = noone;

check = 0;
vx = 0;
vy = 0;
vx0 = 0;
vy0 = 0;
vx1 = 0;
vy1 = 0;
vx2 = 0;
vy2 = 0;
px = 0;
py = 0;
rad = 0;
d = 0;

angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>check = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if check == 1{
if collision_circle(x,y,300,O_ENEMY_P,1,0){
TARGET = collision_circle(x,y,300,O_ENEMY_P,1,0);
}
}
if instance_exists(TARGET){
vx0 = vx;
vy0 = vy;

d = sqrt((TARGET.x-x)*(TARGET.x-x) + (TARGET.y-y) * (TARGET.y-y));

rad = (pi / 180) * 1;
vx2 = cos(rad) * vx0 - sin(rad) * vy0;
vy2 = sin(rad) * vx0 + cos(rad) * vy0;


if (d &gt; 0)
{
vx1 = (TARGET.x - x)/d * _speed;
vy1 = (TARGET.y - y)/d * _speed;

//angle += 2;
//angle = angle mod 360;

//x = (TARGET.x - x) + lengthdir_x(100,angle);
//y = (TARGET.y - y) + lengthdir_y(100,angle);


}
else{
vx1 = 0;
vy1 = _speed;
}



if ((vx0 * vx1 + vy0 * vy1) &gt;= (vx0 * vx2 + vy0 * vy2)){
vx = vx1;
vy = vy1;
}
else{
vx3 = cos(rad) * vx0 + sin(rad) * vy0;
vy3 = -sin(rad) * vx0 + cos(rad) * vy0;

px = TARGET.x - x;
py = TARGET.y - y;

if (px * vx2 + py * vy2 &gt;= px * vx3 + py * vy3){
vx = vx2;
vy = vy2;
}
else{
vx = vx3;
vy = vy3;
}
}

x += vx;
y += vy;
//_enemy_angle += (point_direction(x,y,TARGET.x,TARGET.y)-_enemy_angle)/10
//repeat(10){
//x += lengthdir_x((_speed),_enemy_angle);
//y += lengthdir_y((_speed),_enemy_angle);
//}
if collision_circle(x,y,sprite_width/2,O_ENEMY_P,1,0){
TARGETS = collision_circle(x,y,sprite_width/2,O_ENEMY_P,1,0);
if instance_exists(TARGETS){
//TARGETS.x_pos_go += 2;
//TARGETS.x_pos_max = lengthdir_x(1,_enemy_angle);
//TARGETS.Damage = 1;
//TARGETS._HP -= 2;
//target_ens.jumpHeight = 1;
//target_ens._Jumping_damage = 1;
//TARGETS.Damage_eff = 1;


//if lengthdir_x(1,_enemy_angle) &gt; 0
//O_Camera.x += 1 * 5;
//else
//O_Camera.x += -1 * 5;
/*
O_Camera.screenShake += 2;
ps1 = part_system_create();
pt1 = part_type_create();
part_type_shape(pt1,1);
part_type_sprite(pt1,S_effect_1,0,1,1);
part_type_color3(pt1,c_white,c_white,c_white);
part_type_size(pt1,0.2,0.6,0,0);
part_type_alpha3(pt1,1,0.1,0);
part_type_speed(pt1,1,3,0,0);
part_type_life(pt1,10,20);

part_type_direction(pt1,0,360,0,0);

part_type_orientation(pt1,0,360,0,0,1);
//part_type_gravity(pt1,1,270);//irandom_range(70,110)
part_type_scale(pt1,1,1);
part_type_blend(pt1,1);
part_system_depth(ps1,-500)
ps1 =part_emitter_create(ps1);
part_emitter_region(ps1,ps1,x,x,y,y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(ps1,ps1,pt1,15);

audio_play_sound(att_sword_1_wv,0,0);

instance_destroy();
*/
}
}
}else{
/*
if image_angle - (_enemy_angle - image_angle) &gt;= 270 &amp;&amp; 0 &gt; ((_enemy_angle - image_angle) - image_angle)/20{
image_angle -= 360;
}
else{
if (_enemy_angle - image_angle) - image_angle &gt;= 270 &amp;&amp; 0 &lt; ((_enemy_angle - image_angle) - image_angle)/20{
image_angle += 360;
}
}
*/
x += lengthdir_x(_speed,image_angle);
y += lengthdir_y(_speed,image_angle);
//image_angle += (_enemy_angle - image_angle)/20;

if _speed &lt; 30{
//_speed += 0.2;
}

}


if (_die &lt; 180){
_die += 1;
}else{
instance_destroy();
}

if _eff == 0{
it = instance_create(x,y,OBJ_MAGIC_eff);
it.sprite_index = sprite_index;
it.image_angle = image_angle;
_eff = 3;
}
else if _eff &gt; 0{
_eff -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
