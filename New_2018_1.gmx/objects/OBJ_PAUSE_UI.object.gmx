<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Pause_UI</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1009</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stage = 0;

_scale = 0;

_alp = 0;

pause_off = 0;

_rectangle_check = 0;
_rectangle_alp = 0.6;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if pause_off == 0{
if _scale &gt;= 0.95{
_scale = 1;
}
_scale += (1-_scale)/5;
_alp += (1-_alp)/5;
}
else{
_scale += (-0.2-_scale)/5;
_alp += (-0.2-_alp)/5;
if _scale &lt;= 0{
global.pause_mode = -1;
instance_destroy();
}
}
x = view_xview+view_wview/2;
y = view_yview+view_hview/2 + 135;
if _rectangle_check == 0{
if _rectangle_alp &lt; 1
_rectangle_alp += 0.005;
else
_rectangle_check = 1;
}
if _rectangle_check == 1{
if _rectangle_alp &gt; 0.6
_rectangle_alp -= 0.005;
else
_rectangle_check = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,0,view_xview+view_wview/2,view_yview +view_hview/2,_scale,_scale,0,c_white,_alp*0.5);

draw_sprite_ext(sprite_index,1,view_xview+view_wview/2,view_yview - 10+view_hview/2 + 64,_scale,_scale,0,c_white,_alp);

draw_set_font(font1);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if _scale &gt; 0.5{
for(h=0;h&lt;3;h++){
for(w=0;w&lt;6;w++){
for(cp=0;cp&lt;9;cp++){
var room_number_on = global.room_number_on[cp];
//if (room_number_on == global.room_stage[h,w]

//global.room_number_name_n[global.room_numbers] == 1
if (room_number_on == global.room_stage[h,w]){
var now_place = global.room_number_on[cp];
var on_n = global.room_stage[h,w];

if (global.room_number_on_n[on_n] != 2)
global.room_number_on_n[on_n] = 1;

global.room_number_on_n[global.room_numbers] = 2;
if (global.room_stage[h,w] == global.room_numbers)
|| (global.room_stage[h,w] == global.room_numbers - 1 &amp;&amp; (global.room_stage[h,w] != 6) &amp;&amp; (global.room_stage[h,w] != 12))
|| (global.room_stage[h,w] == global.room_numbers + 1 &amp;&amp; (global.room_stage[h,w] != 5) &amp;&amp; (global.room_stage[h,w] != 11) &amp;&amp; (global.room_stage[h,w] != 17))
|| (global.room_stage[h,w] == global.room_numbers - 6)
|| (global.room_stage[h,w] == global.room_numbers + 6)
//|| (global.room_number_on_n[global.room_stage[h,w]] &gt; 0)
{
if (global.room_number_on_n[global.room_stage[h,w]] &gt; 0){
if (cp == 8 &amp;&amp; global.room_number_name[cp] == 10)
draw_sprite_ext(spr_map_icon,3,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
else if (global.room_number_on_n[global.room_stage[h,w]] &gt; 0)
draw_sprite_ext(spr_map_icon,1,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
else
draw_sprite_ext(spr_map_icon,0,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
}

if (global.room_numbers == now_place){
draw_sprite_ext(spr_map_icon,2,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
}
//draw_text_transformed(view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),string(global.room_number_on[cp]),_scale,_scale,0);

if (global.room_stage[h,w] != 6) &amp;&amp; (global.room_stage[h,w] != 12)
//&amp;&amp; global.room_stage[h,w] == global.room_numbers - 1
{
var on_n_back = global.room_stage[h,w] - 1;
if global.room_stage[h,w] &gt; 0 &amp;&amp; (global.room_number_on_n[on_n_back] &gt; 0){ //&amp;&amp; global.room_number_on[global.room_stage[h,w] - 1] &gt;= 0
//draw_sprite_ext(spr_map_icon,1,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
draw_sprite_ext(spr_map_icon_arrow,1,view_xview + view_wview/2 - 330 + (w)*(125) - 48,view_yview - 10 + 210 + (125)*(h),_scale*1,_scale*0.3,0,c_white,_alp); 
}
}


if (global.room_stage[h,w] &lt;= 17){
if (global.room_stage[h,w] != 5) &amp;&amp; (global.room_stage[h,w] != 11) &amp;&amp; (global.room_stage[h,w] != 17)
//&amp;&amp; global.room_stage[h,w] == global.room_numbers + 1
{
var on_n_go = global.room_stage[h,w] + 1;
if (global.room_number_on_n[on_n_go] &gt; 0)
{
  //&amp;&amp; global.room_number_on[global.room_stage[h,w] + 1] &gt;= 0
//draw_sprite_ext(spr_map_icon,1,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
draw_sprite_ext(spr_map_icon_arrow,1,view_xview + view_wview/2 - 330 + (w)*(125) + 48,view_yview - 10 + 210 + (125)*(h),_scale*1,_scale*0.3,0,c_white,_alp); 
}
}
}



if (global.room_stage[h,w] &lt;= 11){
var on_n_down = global.room_stage[h,w] + 6;
if (global.room_number_on_n[on_n_down] &gt; 0)// &amp;&amp; global.room_stage[h,w] == global.room_numbers + 6
{  //&amp;&amp; global.room_number_on[global.room_stage[h,w] + 6] &gt;= 0
//draw_sprite_ext(spr_map_icon,1,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
draw_sprite_ext(spr_map_icon_arrow,0,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h) + 48,_scale*0.3,_scale*1,0,c_white,_alp); 
}
}


if global.room_stage[h,w] &gt;= 6{
var on_n_up = global.room_stage[h,w] - 6;
if (global.room_number_on_n[on_n_up] &gt; 0)// &amp;&amp; global.room_stage[h,w] == global.room_numbers - 6
{ //&amp;&amp; global.room_number_on[global.room_stage[h,w] - 6] &gt;= 0
//draw_sprite_ext(spr_map_icon,1,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);
draw_sprite_ext(spr_map_icon_arrow,0,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h) - 48,_scale*0.3,_scale*1,0,c_white,_alp); 
}
}

//if (global.room_numbers == now_place){
if (global.room_numbers == now_place){
//draw_sprite_ext(spr_map_icon,2,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h),_scale,_scale,0,c_white,_alp);

draw_set_alpha(_rectangle_alp - 0.6);
draw_rectangle_colour(view_xview + view_wview/2 - 330 + (w)*(125) - 78/2,view_yview - 10 + 210 + (125)*(h) - 78/2,
view_xview + view_wview/2 - 330 + (w)*(125) + 78/2,view_yview - 10 + 210 + (125)*(h) + 78/2,c_yellow,c_yellow,c_yellow,c_yellow,0);
draw_sprite_ext(S_CHAR_OP_UI_1,global.select_menu,view_xview + view_wview/2 - 330 + (w)*(125),view_yview - 10 + 210 + (125)*(h)-50,_scale*0.5,_scale*0.5,0,c_white,_alp);
draw_set_alpha(1);
}

}
}
}
}
}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
