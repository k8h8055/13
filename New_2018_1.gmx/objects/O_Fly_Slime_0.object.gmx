<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_slime_fly</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-161</depth>
  <persistent>0</persistent>
  <parentName>O_ENEMY_FLY_P</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_xspd_delay = 0;
Damage_eff = 0;
Damage = 0;
onGround = false;

facing = image_xscale; // Change xscale in editor to adjust initial facing

// For squash + stretch
xscale = 1
yscale = 1;
scale = 1.5;
x_pos_go = 0;
x_pos_max = 10;
///////////////////////////////////////////////////////////////////////////////

// Misc ///////////////////////////////////////////////////////////////////////

mDir = 1;
// Relative collision checks
cLeft  = 0;
cRight = 0;
ccLeft  = 0;
ccRight = 0;
cAbove = 0;
cHide = 0;
cClimb_Left = 0;
cClimb_Right = 0;

_xspd = choose(-1,1);
_yspd = 0;

m_dir = 0;

m_Brake = 0;
onGround = false;
platformTarget = false;
onWaters = false;
_Jump = 0;
// Adjust THIS to adjust overall player speed
m = 0.25;

// Acceleration + friction
groundAccel = 1.0//  * m;
groundFric  = 2.0//  * m;
airAccel    = 0.75// * m;
airFric     = 0.10// * m;

// Max movement speeds
maxH        = 1//12  * m;
maxV        = 18//30.0  * m;
mAccel = 0;

gravRise    = 1//3  * m;
gravFall    = 1//3  * m;
gravSlide   = 0.75// * m;
Slide = false;
camDist     = 6//24.0; // (later versions)

// Frames prior to being able to push off of wall slide with arrow keys (doesn't affect wall jump)
clingTime   = 4//4.0  * m;

kJump = false;

_frictionTarget = noone;
_frictionXTarget = noone;

_bac_delay = 0;
_moving = 0;
_Jumping = 0;

_ATTACKING = 0;
_ATTACK = 0;
_ATTACK_1 = 0;
_ATTACK_2 = 0;
_ATTACK_MAGIC = 0;
_ATTACK_MAGICING = 0;
_ATTACK_POSITION = 0;

image_speed = 0.1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 콜리즌 x,y값
_collision_X = x;
_collision_Y = y-sprite_height/2;
jumpHeight  = 4;
_Jumping_damage = 0;

DIRECTION = 0;
DIRECTION_Y = 0;
DIRECTION_ON = 0;

att_delay = 0;
att_delay_max = 180;

targets = noone;

collision_delay = 0;

check_id = Empty;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 체력 
_HP = 5;
_HP_MAX = _HP;
_alp = 0;
_Armor = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1200</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>10</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>11</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fly1 = part_system_create();
flyt1 = part_type_create();
part_type_shape(flyt1,1);
part_type_sprite(flyt1,S_effect_1,0,1,1);
part_type_color3(flyt1,c_white,c_white,c_white);
part_type_size(flyt1,0.2,1.5,0,0);
part_type_alpha3(flyt1,1,0.1,0);
part_type_speed(flyt1,1,10,0,0);
part_type_life(flyt1,10,40);
part_type_direction(flyt1,0,360,0,0);
part_type_orientation(flyt1,0,360,0,0,1);
part_type_scale(flyt1,1,1);
part_type_blend(flyt1,1);
part_system_depth(fly1,-500)
fly1 =part_emitter_create(fly1);
part_emitter_region(fly1,fly1,x,x,y,y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(fly1,fly1,flyt1,15);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _HP &lt; 5{
_HP += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>240</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(collision_rectangle(x-sprite_width/2,y-sprite_height/2,x+sprite_width/2,y+sprite_height/2,O_Block_Parent,1,0)
|| y &lt; sprite_height || y &gt; room_height - sprite_height)
&amp;&amp; !(collision_rectangle(x-sprite_width/2,y-sprite_height/2,x+sprite_width/2,y+sprite_height/2,O_Block_Parent,1,0)
|| x &lt; sprite_width || x &gt; room_width - sprite_width){
randomize();
_xspd = irandom_range(2,4) * choose(-1,1);
_yspd = irandom_range(2,4) * choose(-1,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (_alp &gt;= 1){
if x_pos_go &gt; 0 
{
x += x_pos_max;
x_pos_go -= 1
}
}
scale += (1-scale)/15;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (_alp &gt;= 1){
if collision_rectangle(x-240,y-240,x+240,y+240,O_Player,1,0){
targets = collision_rectangle(x-240,y-240,x+240,y+240,O_Player,1,0);
if collision_line(x,y,targets.x,targets.y,O_Block_Parent,1,0){
targets = noone;
}
}


if instance_exists(targets) &amp;&amp; att_delay &lt;= 0{
if targets.x &lt; x{
x += ((O_Player.x - 50) - x)/60;
}else{
x += ((O_Player.x + 50) - x)/60;
}
y += (O_Player.y - y)/40;
}
else{
if collision_rectangle(x-sprite_width/2,y-sprite_height/2 +_yspd ,x+sprite_width/2,y+sprite_height/2 + _yspd,O_Block_Parent,1,0)
|| y &lt; sprite_height || y &gt; room_height - sprite_height
{
y -= _yspd;
_yspd *= -1;

}
if collision_rectangle(x-sprite_width/2 + _xspd,y-sprite_height/2,x+sprite_width/2+_xspd,y+sprite_height/2,O_Block_Parent,1,0)
|| x &lt; sprite_width || x &gt; room_width - sprite_width{
x -= _xspd*2;
_xspd *= -1;
}
x += _xspd;
y += _yspd;
}

if collision_rectangle(x-sprite_width/2+5,y-sprite_height/2,x+sprite_width/2-5,
y+sprite_height/2 - 4,O_Player,1,0){
targets = collision_rectangle(x-sprite_width/2+5,y-sprite_height/2,x+sprite_width/2-5,
y+sprite_height/2 - 4,O_Player,1,0);

if instance_exists(targets){
if targets._Damage &lt;= 0 &amp;&amp; targets._booster &lt; 10{
targets._xspd = xscale * 6;
targets.Damage_xscale = xscale * 1;

targets._Damage = 100;
if global._hp &gt; 0
global._hp -= 20;
att_delay = att_delay_max;
}
}
}
if att_delay &gt; 0{
att_delay -= 1;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _alp &gt;= 1{
if Damage &gt; 0{
targets = O_Player;
alarm[11] = 30;
Damage -= 1;
    if _Jumping_damage == 1{
          //image_index = 0;
        _yspd = -jumpHeight * 1.2;
           
        jumpHeight = 4;
        _Jumping_damage = 0;
        }
image_blend = c_red;        
if _HP &lt;= 0{
ps1 = part_system_create();
pt1 = part_type_create();
part_type_shape(pt1,1);
part_type_sprite(pt1,S_effect_1,0,1,1);
part_type_color3(pt1,c_white,c_white,c_white);
part_type_size(pt1,0.2,1,0,0);
part_type_alpha3(pt1,1,0.1,0);
part_type_speed(pt1,10,40,0,0);
part_type_life(pt1,10,15);
part_type_direction(pt1,0,360,0,0);
part_type_orientation(pt1,0,360,0,0,1);
//part_type_gravity(pt1,1,270);//irandom_range(70,110)
part_type_scale(pt1,1,1);
part_type_blend(pt1,1);
part_system_depth(ps1,-500)
ps1 =part_emitter_create(ps1);
part_emitter_region(ps1,ps1,x-sprite_width/2,x+sprite_width/2,y-sprite_height,y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(ps1,ps1,pt1,30);
audio_play_sound(die_sound,0,0);
global._exp += 10;
instance_destroy();
}else{
if Damage_eff = 0{
ps1 = part_system_create();
pt1 = part_type_create();
part_type_shape(pt1,1);
part_type_sprite(pt1,S_effect_1,0,1,1);
part_type_color3(pt1,c_white,c_white,c_white);
part_type_size(pt1,0.1,0.6,0,0);
part_type_alpha3(pt1,1,0.1,0);
part_type_speed(pt1,2,8,0,0);
part_type_life(pt1,10,15);
part_type_direction(pt1,0,360,0,0);
part_type_orientation(pt1,0,360,0,0,1);
//part_type_gravity(pt1,1,270);//irandom_range(70,110)
part_type_scale(pt1,1,1);
part_type_blend(pt1,1);
part_system_depth(ps1,-500)
ps1 =part_emitter_create(ps1);
part_emitter_region(ps1,ps1,_collision_X,_collision_X,_collision_Y,_collision_Y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(ps1,ps1,pt1,30);

Damage_eff = 1;
}
}
}else{
if _HP &lt;= 0{
ps1 = part_system_create();
pt1 = part_type_create();
part_type_shape(pt1,1);
part_type_sprite(pt1,S_effect_1,0,1,1);
part_type_color3(pt1,c_white,c_white,c_white);
part_type_size(pt1,0.2,1,0,0);
part_type_alpha3(pt1,1,0.1,0);
part_type_speed(pt1,10,40,0,0);
part_type_life(pt1,10,15);
part_type_direction(pt1,0,360,0,0);
part_type_orientation(pt1,0,360,0,0,1);
//part_type_gravity(pt1,1,270);//irandom_range(70,110)
part_type_scale(pt1,1,1);
part_type_blend(pt1,1);
part_system_depth(ps1,-500)
ps1 =part_emitter_create(ps1);
part_emitter_region(ps1,ps1,x-sprite_width/2,x+sprite_width/2,y-sprite_height,y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(ps1,ps1,pt1,30);
audio_play_sound(die_sound,0,0);
global._exp += 10;
instance_destroy();
}

image_blend = c_white;
check_id = noone;
Damage = 0;
Damage_eff = 0;
_collision_Y = y-sprite_height/2;
_collision_X = x;
}
if _xspd &gt; 0{xscale = 1;}
else if _xspd &lt; 0{xscale = -1;};
}
else{
_HP = _HP_MAX;
}

if _alp &lt; 1{
_alp += 0.04;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,1*xscale*scale,1*scale, DIRECTION, image_blend, image_alpha*_alp);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
