<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_slime</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-161</depth>
  <persistent>0</persistent>
  <parentName>O_ENEMY_P</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pl_target = noone;
_xspd_delay = 0;
Damage_eff = 0;
Damage = 0;
onGround = false;

facing = image_xscale; // Change xscale in editor to adjust initial facing

// For squash + stretch
xscale = 1
yscale = 1;

x_pos_go = 0;
x_pos_max = 10;
///////////////////////////////////////////////////////////////////////////////

// Misc ///////////////////////////////////////////////////////////////////////

mDir = 1;
// Relative collision checks
cLeft  = 0;
cRight = 0;
ccLeft  = 0;
ccRight = 0;
cAbove = 0;
cHide = 0;
cClimb_Left = 0;
cClimb_Right = 0;

_xspd = choose(-1,1);
_yspd = 0;

m_dir = 0;

m_Brake = 0;
onGround = false;
platformTarget = false;
onWaters = false;
_Jump = 0;
// Adjust THIS to adjust overall player speed
m = 0.25;

// Acceleration + friction
groundAccel = 1.0//  * m;
groundFric  = 2.0//  * m;
airAccel    = 0.75// * m;
airFric     = 0.10// * m;

// Max movement speeds
maxH        = 1//12  * m;
maxV        = 18//30.0  * m;
mAccel = 0;

gravRise    = 1//3  * m;
gravFall    = 1//3  * m;
gravSlide   = 0.75// * m;
Slide = false;
camDist     = 6//24.0; // (later versions)

// Frames prior to being able to push off of wall slide with arrow keys (doesn't affect wall jump)
clingTime   = 4//4.0  * m;

kJump = false;

_frictionTarget = noone;
_frictionXTarget = noone;

_bac_delay = 0;
_moving = 0;
_Jumping = 0;

_ATTACKING = 0;
_ATTACK = 0;
_ATTACK_1 = 0;
_ATTACK_2 = 0;
_ATTACK_MAGIC = 0;
_ATTACK_MAGICING = 0;
_ATTACK_POSITION = 0;

image_speed = 0.1;

onUpGround = OnUpGround(0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 콜리즌 x,y값
_collision_X = x;
_collision_Y = y-sprite_height/2;
jumpHeight  = 4;
_Jumping_damage = 0;

DIRECTION = 0;
DIRECTION_Y = 0;
DIRECTION_ON = 0;

range_max = 200;

Att_Wait = 0;
Att_Go = 0;
Att_Delay = 0;
_angle = 0;
_alp = 0;

check_id = Empty;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>130</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// 체력 
_image = choose(0,1,2);
_HP = 10;
_Armor = 0;
switch(_image){
case 0 : sprite_index = S_slime;break;
case 1 : sprite_index = S_slime_1;break;
case 2 : sprite_index = S_slime_2;_HP = 15;break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1200</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>10</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Att_Wait &lt;= 0 &amp;&amp; Att_Go &lt;= 0{
if x &lt; O_Player.x{
_xspd = 4;
}
else{
_xspd = -4;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if _HP &lt; 5{
_HP += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

var choose_att = choose(0,1);

Att_Go = 40;


if instance_exists(O_Player) &amp;&amp; _HP &gt; 0{
if choose_att == 0{
_yspd = -10 - abs((O_Player.y - y)/15);
if (_yspd &lt; -25)
_yspd = -25;

_xspd = (O_Player.x - x)/abs(_yspd*2);
}
else{
_yspd = -10 - abs((O_Player.y - y)/15);

if (_yspd &lt; -25)
_yspd = -25;
_xspd = (O_Player.x - x)/abs(_yspd*2);
}

Att_Go = abs(round(_yspd * 1.2))
audio_play_sound(Slime_jump_wv,0,0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (collision_rectangle(x-sprite_width/2,y+sprite_height/2,x-sprite_width/2,y+sprite_height/2,O_Block_Parent,1,0))
&amp;&amp; (collision_rectangle(x+sprite_width/2,y+sprite_height/2,x+sprite_width/2,y+sprite_height/2,O_Block_Parent,1,0))
&amp;&amp; !(collision_rectangle(x-sprite_width/2,y-sprite_height/2,x+sprite_width/2,y-16,O_Block_Parent,1,0)){
_xspd *= -1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>300</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var enemyGround = EnemyGround(self);
var enemyByGround = EnemyByGround(self,_xspd);
var enemyByEGround = EnemyByEGround(self);
var enemyViewIn = EnemyViewIn();

if (
(collision_rectangle(x-sprite_width/2+_xspd*2,y-sprite_height/2 - 4 + (_yspd),x+sprite_width/2+_xspd*2,y-sprite_height/2 - 4,O_Block_Parent,1,0) &amp;&amp; _yspd &lt; 0)
|| y &lt;= 0 + sprite_height/2)
|| (collision_rectangle(x-sprite_width/2+_xspd*2,y-sprite_height/2 - 4 + (_yspd),x+sprite_width/3+_xspd*2,y+sprite_height/2 - 8 + _yspd,O_Block_Parent,1,0) &amp;&amp; _yspd &gt; 0.5 &amp;&amp; Att_Go &gt; 0)
|| (collision_rectangle(x-sprite_width/2+_xspd*2,y-sprite_height/2 - 4 + (_yspd),x+sprite_width/3+_xspd*2,y+sprite_height/2 - 8 + _yspd,O_Block_empty_parent,1,0) &amp;&amp; _yspd &gt; 0.5 &amp;&amp; Att_Go &gt; 0)
{
y -= _yspd * 2;
_yspd *= -0.5;
}
else if (collision_rectangle(x-sprite_width/2 - _xspd*2,y,x+sprite_width/2 - _xspd*2,y+sprite_height/2 - 4+_yspd,O_Block_Parent,1,0) &amp;&amp; _yspd &gt;= 0)
|| (collision_rectangle(x-sprite_width/2 - _xspd*2 ,y+sprite_height/2 - 8 + _yspd,x+sprite_width/2 - _xspd*2,y+sprite_height/2 - 4+_yspd,O_Block_empty_parent,1,0) &amp;&amp; _yspd &gt; 0)
{
BL_TARGET = collision_rectangle(x-sprite_width/2 - _xspd*2 ,y+sprite_height/2 - 8 + _yspd,x+sprite_width/2 - _xspd*2,y+sprite_height/2 - 4+_yspd,O_Block_empty_parent,1,0)
if instance_exists(BL_TARGET){
if (BL_TARGET.y &gt; y+sprite_height/2 - 8)
//y += _yspd;
_yspd = 0;
}
else
_yspd = 0;

}else{
y += _yspd;
}

if (collision_rectangle(x-sprite_width/3,y,x+sprite_width/3,y+sprite_height/2 + 2,O_Block_empty_parent,1,0) &amp;&amp; _yspd &gt;= 0)
&amp;&amp; (enemyByEGround
|| !(collision_rectangle(x-sprite_width/3+_xspd*2,y,x-sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_empty_parent,1,0))
|| !(collision_rectangle(x+sprite_width/3+_xspd*2,y,x+sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_empty_parent,1,0))
)
{
if (_xspd_delay == 0)
{
//_xspd_delay = 10;
if !(collision_rectangle(x-sprite_width/3+_xspd*2,y,x-sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_empty_parent,1,0))
x += abs(_xspd)*2;
else if !(collision_rectangle(x+sprite_width/3+_xspd*2,y,x+sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_empty_parent,1,0))
x -= abs(_xspd)*2;
else
x -= _xspd*2;

_xspd *= -1;

x_pos_go = 0;
x_pos_max = 0;
}
}

if (collision_rectangle(x-sprite_width/2 + _xspd*3,y-sprite_height/2 - 2,x+sprite_width/2 + _xspd*3,y+sprite_height/2 + 2,O_Block_Parent,1,0) || x &lt; sprite_width/2 || x &gt; room_width - sprite_width/2)
&amp;&amp; ((enemyByGround)
|| !(collision_rectangle(x-sprite_width/3+_xspd*2,y,x-sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_Parent,1,0))
|| !(collision_rectangle(x+sprite_width/3+_xspd*2,y,x+sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_Parent,1,0))
)
{
if (_xspd_delay == 0)
{
if enemyByGround || x &lt; sprite_width/2 || x &gt; room_width - sprite_width/2
{
if _xspd &gt; 0
x -= abs(_xspd)*3;
else
x += abs(_xspd)*3;
_xspd_delay = 30;
}
else if !(collision_rectangle(x-sprite_width/3+_xspd*2,y,x-sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_Parent,1,0))
x += abs(_xspd)*2;
else if !(collision_rectangle(x+sprite_width/3+_xspd*2,y,x+sprite_width/3+_xspd*2,y+sprite_height/2 + 1,O_Block_Parent,1,0))
x -= abs(_xspd)*2;


_xspd *= -1;

x_pos_go = 0;
x_pos_max = 0;
}
}

if (x_pos_go &gt; 0 &amp;&amp; _HP &gt; 0)
{
repeat(abs(x_pos_max)){
if !collision_rectangle(x-sprite_width/2 + sign(x_pos_max)*3,y-sprite_height/2 - 4 + 1,
x+sprite_width/2 + sign(x_pos_max)*3,y+sprite_height/2 - 4,O_Block_Parent,1,0)
x += sign(x_pos_max);
else{
x -= sign(x_pos_max)*2;
x_pos_max *= -1;
}
}
x_pos_go -= 1

_xspd_delay = 0;
}
else
{
x += _xspd;
}

if _xspd_delay &gt;0{
_xspd_delay -= 1;
}
if x_pos_go &gt; 0{
x_pos_go -= 1
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.inventory_on</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if collision_rectangle(x-sprite_width/2+5,y-sprite_height/2,x+sprite_width/2-5,
y+sprite_height/2 - 4,O_Player,1,0) &amp;&amp; _HP &gt; 0 &amp;&amp; Att_Go &gt; 0{
targets = collision_rectangle(x-sprite_width/2+5,y-sprite_height/2,x+sprite_width/2-5,
y+sprite_height/2 - 4,O_Player,1,0);

if instance_exists(targets){
if targets._Damage &lt;= 0 &amp;&amp; targets._booster &lt; 10{
targets._xspd = xscale * _xspd/2;
targets.Damage_xscale = xscale * 1;
targets._Damage = 100;
if global._hp &gt; 0
global._hp -= 20;
}
}
}

if collision_rectangle(x-range_max,y-range_max*2,x+range_max,y+range_max/10,O_Player_P,1,0)
&amp;&amp; Att_Wait &lt;= 0 &amp;&amp; Att_Delay &lt;= 0 &amp;&amp; Att_Go &lt;= 0{
pl_target = collision_rectangle(x-range_max,y-range_max/10,x+range_max,y+range_max/10,O_Player_P,1,0);
if instance_exists(pl_target){
if pl_target.x &gt; x{
_xspd = 1;
}else if pl_target.x &lt; x{
_xspd = -1;
}
}
Att_Wait = 60;
_xspd = 0;
alarm[1] = 50;
Att_Delay = 240;
}
if Att_Wait &gt; 0
Att_Wait -= 1;

if Att_Delay &gt; 0
Att_Delay -= 1;

if Att_Go &gt; 1{
_angle += _xspd;
_angle = _angle mod 360;
Att_Go -= 1;
image_speed = abs(_xspd) * 0.02;
}
else{
if Att_Go == 1{
if instance_exists(pl_target){
if pl_target.x &gt; x
_xspd = 2;
else if pl_target.x &lt; x
_xspd = -2;
else
_xspd = choose(2,-2);
}
else{_xspd = choose(2,-2);}
Att_Go = 0;}
if _xspd == 0 &amp;&amp; Att_Wait &lt;= 0 &amp;&amp; Att_Go &lt;= 0 &amp;&amp; Damage &lt;= 0{
_xspd = choose(-2,2);
}
image_speed = abs(_xspd) * 0.05;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Damage &gt; 0{
if Att_Wait &lt;= 0 &amp;&amp; Att_Go &lt;= 0{
_xspd = 0;
alarm[11] = 30;
    if _Jumping_damage == 1{
        //image_index = 0;
        _yspd = -jumpHeight * 1.2;
           
        _Jumping_damage = 0;
        }
}
Damage -= 1;
image_blend = c_red;        
if _HP &lt;= 0{

}else{
if Damage_eff = 0{
ps1 = part_system_create();
pt1 = part_type_create();
part_type_shape(pt1,1);
part_type_sprite(pt1,S_effect_1,0,1,1);
part_type_color3(pt1,c_white,c_white,c_white);
part_type_size(pt1,0.1,0.6,0,0);
part_type_alpha3(pt1,1,0.1,0);
part_type_speed(pt1,2,8,0,0);
part_type_life(pt1,10,15);
part_type_direction(pt1,0,360,0,0);
part_type_orientation(pt1,0,360,0,0,1);
//part_type_gravity(pt1,1,270);//irandom_range(70,110)
part_type_scale(pt1,1,1);
part_type_blend(pt1,1);
part_system_depth(ps1,-500)
ps1 =part_emitter_create(ps1);
part_emitter_region(ps1,ps1,_collision_X,_collision_X,_collision_Y,_collision_Y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(ps1,ps1,pt1,30);

Damage_eff = 1;
}
}
}else{
image_blend = c_white;
check_id = noone;
Damage = 0;
Damage_eff = 0;
jumpHeight = 4;
_collision_Y = y-sprite_height/2;
_collision_X = x;
}

if ((cLeft || cRight)) {
        // Wall slide
        _yspd = Approach(_yspd, maxV, gravSlide);
    } else {
        
        // Fall normally
        if (_yspd &lt; 0)
            _yspd = Approach(_yspd, maxV, gravRise);
        else
            _yspd = Approach(_yspd, maxV, gravFall);
    }

if _xspd &gt; 0{xscale = 1;}
else if _xspd &lt; 0{xscale = -1;};

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (_yspd &gt; 0.5 || _yspd &lt; -0.5) || Att_Go &gt; 1
draw_sprite_ext(S_slime_jumping,_image,x-_ATTACK_POSITION*xscale, y+DIRECTION_Y+DIRECTION_ON*_ATTACK_POSITION/2*xscale,1*xscale, 1, _angle, image_blend, image_alpha);       
else
draw_sprite_ext(sprite_index, image_index,x-_ATTACK_POSITION*xscale, y+DIRECTION_Y+DIRECTION_ON*_ATTACK_POSITION/2*xscale,1*xscale, 1, DIRECTION, image_blend, image_alpha);

if (_yspd &gt; 0.5 || _yspd &lt; -0.5) || Att_Go &gt; 1{
if _image == 2
draw_sprite_ext(S_slime_jumping_2_alp, image_index,x-_ATTACK_POSITION*xscale, y+DIRECTION_Y+DIRECTION_ON*_ATTACK_POSITION/2*xscale,1*xscale, 1, _angle, image_blend, image_alpha*_alp);       
else
draw_sprite_ext(S_slime_jumping_alp, image_index,x-_ATTACK_POSITION*xscale, y+DIRECTION_Y+DIRECTION_ON*_ATTACK_POSITION/2*xscale,1*xscale, 1, _angle, image_blend, image_alpha*_alp);   
}
else{
if _image == 2
draw_sprite_ext(S_slime_2_alp, image_index,x-_ATTACK_POSITION*xscale, y+DIRECTION_Y+DIRECTION_ON*_ATTACK_POSITION/2*xscale,1*xscale, 1, 0, image_blend, image_alpha*_alp);       
else
draw_sprite_ext(S_slime_alp, image_index,x-_ATTACK_POSITION*xscale, y+DIRECTION_Y+DIRECTION_ON*_ATTACK_POSITION/2*xscale,1*xscale, 1, 0, image_blend, image_alpha*_alp);   
}

if _HP &lt;= 0{
//if _alp &lt; 1
//_alp += 0.1;
//else{
ps1 = part_system_create();
pt1 = part_type_create();
part_type_shape(pt1,1);
part_type_sprite(pt1,S_effect_1,0,1,1);
part_type_color3(pt1,c_white,c_white,c_white);
part_type_size(pt1,0.2,1,0,0);
part_type_alpha3(pt1,1,0.1,0);
part_type_speed(pt1,10,40,0,0);
part_type_life(pt1,10,15);
part_type_direction(pt1,0,360,0,0);
part_type_orientation(pt1,0,360,0,0,1);
part_type_scale(pt1,1,1);
part_type_blend(pt1,1);
part_system_depth(ps1,-500)
ps1 =part_emitter_create(ps1);
part_emitter_region(ps1,ps1,x-sprite_width/2,x+sprite_width/2,y-sprite_height,y,ps_shape_line,ps_distr_gaussian);
part_emitter_burst(ps1,ps1,pt1,30);

audio_play_sound(die_sound,0,0);
global._exp += 15;
instance_destroy();
//}
}           

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
