<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite66</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if O_Player.x &lt;= view_wview/2{
x = view_wview/2
}
else{
if O_Player.x &gt;= room_width - view_wview/2{
x = room_width - view_wview/2
}
else{
x = O_Player.x;
}
}

if O_Player.y &gt;= (room_height - view_hview/2){
y = (room_height - view_hview/2);
}
else{
y = O_Player.y;
}

if x &lt;= view_wview/2{
background_x[1] = ((view_wview/2 * 0.8));
background_x[2] = ((view_wview/2 * 0.6));
background_x[3] = ((view_wview/2 * 0.4));
background_x[4] = ((view_wview/2 * 0.1));
}else{
if x &gt;= room_width - view_wview/2 {
background_x[1] = ((room_width - view_wview/2 * 0.8));
background_x[2] = ((room_width - view_wview/2 * 0.6));
background_x[3] = ((room_width - view_wview/2 * 0.4));
background_x[4] = ((room_width - view_wview/2 * 0.1));
}else{
background_x[1] = ((x * 0.8));
background_x[2] = ((x * 0.6));
background_x[3] = ((x * 0.4));
background_x[4] = ((x * 0.1));
}
}

if y &lt;= view_hview/2{
background_y[1] = (((view_hview/2 * .4) - 50)) ;
background_y[2] = (((view_hview/2 * .3) - 50)) ;
background_y[3] = ((view_hview/2 * .2) - 50);
background_y[4] = ((view_hview/2 * .1) - 450);
}
else{
if y &gt;= room_height - view_hview/2 {
background_y[1] = ((((room_height - view_hview/2) * .4) - 50)) ;
background_y[2] = ((((room_height - view_hview/2) * .3) - 50)) ;
background_y[3] = (((room_height - view_hview/2) * .2) - 50);
background_y[4] = (((room_height - view_hview/2) * .1)- 450);
}
else{
background_y[1] = (((y * .4) - 50)) ;
background_y[2] = (((y * .3) - 50)) ;
background_y[3] = ((y * .2) - 50);
background_y[4] = ((y * .1)- 450);
}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_object = self;

delay = 0;
x = O_Player.x

minimap_on = 1;

map_view_on = 0;
/*
background_y[1] = room_height/2 - 100;
background_y[2] = room_height/2 - 100;
background_y[3] = room_height/2 - 100;
background_y[4] = room_height/2 - 100;

background_x[1] = (x * 0.8);
background_x[2] = (x * 0.6);
background_x[3] = (x * 0.4);
background_x[4] = (x * 0.1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if x &gt;= view_wview/2
&amp;&amp; x &lt;= room_width - view_wview/2
{
x = O_Player.x;
}
else{
if x &lt;= view_wview/2{
x = view_wview/2
}
if x &gt;= room_width - view_wview/2{
x = room_width - view_wview/2
}
}

if y &lt;= (room_height - view_hview/2)
{
y = O_Player.y
}
else{
if y &gt;= (room_height - view_hview/2){
y = (room_height - view_hview/2);
}
}

if x &lt;= view_wview/2{
background_x[1] = floor((view_wview/2 * 0.9));
background_x[2] = floor((view_wview/2 * 0.6));
background_x[3] = floor((view_wview/2 * 0.4));
background_x[4] = floor((view_wview/2 * 0.1));
}else{
if x &gt;= room_width - view_wview/2 {
background_x[1] = floor((room_width - view_wview/2 * 0.9));
background_x[2] = floor((room_width - view_wview/2 * 0.6));
background_x[3] = floor((room_width - view_wview/2 * 0.4));
background_x[4] = floor((room_width - view_wview/2 * 0.1));
}else{
background_x[1] = floor((x * 0.9));
background_x[2] = floor((x * 0.6));
background_x[3] = floor((x * 0.4));
background_x[4] = floor((x * 0.1));
}
}

if y &lt;= view_hview/2{
background_y[1] = (((view_hview/2 * .4) - 50)) ;
background_y[2] = (((view_hview/2 * .3) - 50)) ;
background_y[3] = ((view_hview/2 * .2) - 50);
background_y[4] = ((view_hview/2 * .1) - 450);
}
else{
if y &gt;= room_height - view_hview/2 {
background_y[1] = ((((room_height - view_hview/2) * .4) - 50)) ;
background_y[2] = ((((room_height - view_hview/2) * .3) - 50)) ;
background_y[3] = (((room_height - view_hview/2) * .2) - 50);
background_y[4] = (((room_height - view_hview/2) * .1)- 450);
}
else{
background_y[1] = (((y * .4) - 50)) ;
background_y[2] = (((y * .3) - 50)) ;
background_y[3] = ((y * .2) - 50);
background_y[4] = ((y * .1)- 450);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if delay &lt;= 0{
if O_Player._booster &gt; 0 || abs(O_Player._xspd) &gt; (O_Player.maxH){
if O_Player.x &gt; view_wview/2
&amp;&amp; O_Player.x &lt; room_width - view_wview/2
{
x += (O_Player.x - x)/10;
}
else{
if O_Player.x &lt;= view_wview/2{
x += (view_wview/2 - x)/5;
}
if O_Player.x &gt;= room_width - view_wview/2{
x += ((room_width - view_wview/2) - x)/5;
}
}
}
else{
if O_Player.x &gt; view_wview/2
&amp;&amp; O_Player.x &lt; room_width - view_wview/2
{
x += (O_Player.x - x)/10;
}
else{
if O_Player.x &lt;= view_wview/2{
x += (view_wview/2 - x)/5;
}
if O_Player.x &gt;= room_width - view_wview/2{
x += ((room_width - view_wview/2) - x)/5;
}
}
}

if y &lt;= (room_height - view_hview/2) - (O_Player.y - y)/4
&amp;&amp; y &gt;= (view_hview/2) - (O_Player.y - y)/4
{
y += (O_Player.y - y)/4;
}
else{
if y &gt;= (room_height - view_hview/2) - (O_Player.y - y)/4{
y = (room_height - view_hview/2);
}
if y &lt;= (view_hview/2) - (O_Player.y - y)/4{
y = (view_hview/2);
}
}

/*
if x &lt;= view_wview/2{
background_x[1] = floor((view_wview/2 * 0.8));
background_x[2] = floor((view_wview/2 * 0.6));
background_x[3] = floor((view_wview/2 * 0.4));
background_x[4] = floor((view_wview/2 * 0.1));
}else{
if x &gt;= room_width - view_wview/2 {
background_x[1] = floor((room_width - view_wview/2 * 0.8));
background_x[2] = floor((room_width - view_wview/2 * 0.6));
background_x[3] = floor((room_width - view_wview/2 * 0.4));
background_x[4] = floor((room_width - view_wview/2 * 0.1));
}else{
background_x[1] = ((x * 0.8));
background_x[2] = ((x * 0.6));
background_x[3] = ((x * 0.4));
background_x[4] = ((x * 0.1));
}
}
*/
background_x[1] = ((x * 0.8));
background_x[2] = ((x * 0.6));
background_x[3] = ((x * 0.4));
background_x[4] = ((x * 0.1));
//}


if y &lt;= view_hview/2{
background_y[1] = (((view_hview/2 * .4) - 50)) ;
background_y[2] = (((view_hview/2 * .3) - 50)) ;
background_y[3] = ((view_hview/2 * .2) - 50);
background_y[4] = ((view_hview/2 * .1) - 450);
}
else{
if y &gt;= room_height - view_hview/2 {
background_y[1] = ((((room_height - view_hview/2) * .4) - 50)) ;
background_y[2] = ((((room_height - view_hview/2) * .3) - 50)) ;
background_y[3] = (((room_height - view_hview/2) * .2) - 50);
background_y[4] = (((room_height - view_hview/2) * .1)- 450);
}
else{
background_y[1] = (((y * .4) - 50)) ;
background_y[2] = (((y * .3) - 50)) ;
background_y[3] = ((y * .2) - 50);
background_y[4] = ((y * .1)- 450);
}
}
if delay &gt; 0{
delay -= 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//delay = 40;

if O_Player._room_start_position == 0{
x = OBJ_NEXT_STAGE.x;
y = OBJ_NEXT_STAGE.y-16;
}
else if O_Player._room_start_position = 1{
x = OBJ_PREVIOUS_STAGE.x;
y = OBJ_PREVIOUS_STAGE.y-16;
}
else if O_Player._room_start_position = 2{
x = OBJ_DOWN_STAGE.x;
y = OBJ_DOWN_STAGE.y-16;
}
else if O_Player._room_start_position = 3{
x = OBJ_UP_STAGE.x;
y = OBJ_UP_STAGE.y-16;
}
if x &lt;= view_wview/2{
x = view_wview/2
}
else if x &gt;= room_width - view_wview/2{
x = room_width - view_wview/2
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(global.inventory_on &gt; 0) &amp;&amp; minimap_on == 2{
var _w,_h,vx,vy,vw,vh,minimap_width,minimap_height;

minimap_width = 240;
minimap_height = 135;
vx=view_xview[0]+view_wview[0] - minimap_width;
vy=view_yview[0];
vw=view_wview[0];
vh=view_hview[0];
_w=minimap_width;
_h=minimap_height;
draw_set_alpha(0.5);
c=c_dkgray;draw_rectangle_color(vx,vy,vx+_w,vy+_h,c,c,c,c,0);//back
c=c_gray;draw_rectangle_color(vx,vy,vx+_w,vy+_h,c,c,c,c,1);//outline
draw_set_alpha(1);
_px=((view_xview[0]+view_wview[0] - minimap_width)*_w)/16;
_py=(view_yview[0]*_h)/9;
_pw=(view_wview[0]*_w)/16;
_ph=(view_hview[0]*_h)/9;
c=c_white;
//draw_rectangle_color(vx,vy,vx+_px+_pw,vy+_py+_ph,c,c,c,c,0);

with(OBJ_PORTAL_PARENT){
if ob_on == 0{
_x=((x-(sprite_width/2))*(240))/(view_wview);
_y=(y*135)/(view_hview);
//draw_point_color(view_xview[0]+_x,view_yview[0]+_y,c_red);

var _rec_y,_rec_h,_rec_x,_rec_w,_part_h,part_w;

_rec_x = view_xview[0] + view_wview - 240 + _x - other.x/(view_wview/240) + 120;
_rec_w = view_xview[0] + view_wview - 240 + _x + floor(sprite_width/4.01) - other.x/(view_wview/240) + 120;
_rec_y = view_yview[0]+_y - other.y/(view_hview/135) + 135/2;
if (sprite_height/4 &lt;= 4)
_rec_h = view_yview[0]+_y+4 - other.y/(view_hview/135) + 135/2;
else
_rec_h = view_yview[0]+_y+sprite_height/4 - other.y/(view_hview/135) + 135/2;



if _rec_h &gt;= view_yview[0] + 135
_part_h = (_rec_h) - (view_yview[0] + 135);
else
_part_h = 0;

if _rec_x &lt;= view_xview[0] + view_wview[0] - 240
_part_w = (_rec_x) - (view_xview[0] + view_wview[0] - 240);
else
_part_w = 0;
draw_set_alpha(0.7);
if _rec_y &lt; _rec_h - _part_h &amp;&amp; _rec_w &gt; _rec_x - _part_w
draw_rectangle_colour(_rec_x - _part_w,_rec_y,_rec_w,_rec_h - _part_h,c_aqua,c_aqua,c_aqua,c_aqua,0);
draw_set_alpha(1);
}
}

with(O_Block_Parent){
_x=(x*(240))/(view_wview);
_y=(y*135)/(view_hview);
//draw_point_color(view_xview[0]+_x,view_yview[0]+_y,c_red);

var _rec_y,_rec_h,_rec_x,_rec_w,_part_h,part_w;

_rec_x = view_xview[0] + view_wview - 240 + _x - other.x/(view_wview/240) + 120;
_rec_w = view_xview[0] + view_wview - 240 + _x + floor(sprite_width/4.01) - other.x/(view_wview/240) + 120;
_rec_y = view_yview[0]+_y - other.y/(view_hview/135) + 135/2;
if (sprite_height/4 &lt;= 4)
_rec_h = view_yview[0]+_y+4 - other.y/(view_hview/135) + 135/2;
else
_rec_h = view_yview[0]+_y+sprite_height/4 - other.y/(view_hview/135) + 135/2;



if _rec_h &gt;= view_yview[0] + 135
_part_h = (_rec_h) - (view_yview[0] + 135);
else
_part_h = 0;

if _rec_x &lt;= view_xview[0] + view_wview[0] - 240
_part_w = (_rec_x) - (view_xview[0] + view_wview[0] - 240);
else
_part_w = 0;
draw_set_alpha(0.7);
if _rec_y &lt; _rec_h - _part_h &amp;&amp; _rec_w &gt; _rec_x - _part_w
draw_rectangle_colour(_rec_x - _part_w,_rec_y,_rec_w,_rec_h - _part_h,c_white,c_white,c_white,c_white,0);
draw_set_alpha(1);
}

with(O_Block_empty_parent){
_x=(x*(240))/(view_wview);
_y=(y*135)/(view_hview);
//draw_point_color(view_xview[0]+_x,view_yview[0]+_y,c_red);

var _rec_y,_rec_h,_rec_x,_rec_w,_part_h,_part_w;

_rec_x = view_xview[0] + view_wview - 240 + _x - other.x/(view_wview/240) + 120;
_rec_w = view_xview[0] + view_wview - 240 + _x + floor(sprite_width/4.01) - other.x/(view_wview/240) + 120;
_rec_y = view_yview[0]+_y - other.y/(view_hview/135) + 135/2;
if (sprite_height/4 &lt;= 4)
_rec_h = view_yview[0]+_y+4 - other.y/(view_hview/135) + 135/2;
else
_rec_h = view_yview[0]+_y+sprite_height/4 - other.y/(view_hview/135) + 135/2;

if _rec_h &gt;= view_yview[0] + 135
_part_h = (_rec_h) - (view_yview[0] + 135);
else
_part_h = 0;

if _rec_x &lt;= view_xview[0] + view_wview[0] - 240
_part_w = (_rec_x) - (view_xview[0] + view_wview[0] - 240);
else
_part_w = 0;
draw_set_alpha(0.7);
if _rec_y &lt; _rec_h - _part_h &amp;&amp; _rec_w &gt; _rec_x - _part_w
draw_rectangle_colour(_rec_x - _part_w,_rec_y,_rec_w,_rec_h - _part_h,c_green,c_green,c_green,c_green,0);
draw_set_alpha(1);
}

with(O_ENEMY_P){
_x=(x*(240))/(view_wview);
_y=(y*135)/(view_hview);
//draw_point_color(view_xview[0]+_x,view_yview[0]+_y,c_red);

var _rec_y,_rec_h,_rec_x,_rec_w,_part_h,part_w;

_rec_x = view_xview[0] + view_wview - 240 + _x - floor((sprite_width/2)/4.01) - other.x/(view_wview/240) + 120;
_rec_w = view_xview[0] + view_wview - 240 + _x + floor((sprite_width/2)/4.01) - other.x/(view_wview/240) + 120;
_rec_y = view_yview[0]+_y-(sprite_height/2)/4 - 1 - other.y/(view_hview/135) + 135/2;

_rec_h = view_yview[0]+_y+(sprite_height/2)/4 - 1 - other.y/(view_hview/135) + 135/2;

if _rec_h &gt;= view_yview[0] + 135
_part_h = (_rec_h) - (view_yview[0] + 135);
else
_part_h = 0;

if _rec_x &lt;= view_xview[0] + view_wview[0] - 240
_part_w = (_rec_x) - (view_xview[0] + view_wview[0] - 240);
else
_part_w = 0;
draw_set_alpha(0.7);
if _rec_y &lt; _rec_h - _part_h &amp;&amp; _rec_w &gt; _rec_x - _part_w
draw_rectangle_colour(_rec_x - _part_w,_rec_y,_rec_w,_rec_h - _part_h,c_red,c_red,c_red,c_red,0);
draw_set_alpha(1);
}

with(O_Player_P){
_x=(x*240)/(view_wview);
_y=(y*135)/(view_hview);
//draw_point_color(view_xview[0]+_x,view_yview[0]+_y,c_red);

var _rec_y,_rec_h,_rec_x,_rec_w,_part_h,_part_w;

_rec_x = view_xview[0] + view_wview - 240 + _x - 4 - other.x/(view_wview/240) + 120;
_rec_w = view_xview[0] + view_wview - 240 + _x + 4 - other.x/(view_wview/240) + 120;
_rec_y = view_yview[0]+_y - 2 - other.y/(view_hview/135) + 135/2;
_rec_h = view_yview[0]+_y+6 - other.y/(view_hview/135) + 135/2;

if _rec_x &lt;= view_xview[0] + view_wview[0] - 240
_part_w = (_rec_x) - (view_xview[0] + view_wview[0] - 240);
else
_part_w = 0;

if _rec_w &gt; _rec_x - _part_w
draw_rectangle_colour(_rec_x - _part_w,_rec_y,_rec_w,_rec_h,c_yellow,c_yellow,c_yellow,c_yellow,0);

}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(global.inventory_on &gt; 0) &amp;&amp; minimap_on == 1{
//--------------------------minimap
var _w,_h,vx,vy,vw,vh,minimap_width,minimap_height;

minimap_width = 240;
minimap_height = 135;
vx=view_xview[0]+view_wview - minimap_width - 4;
vy=view_yview[0] + 4;
vw=view_wview[0] - 4;
vh=view_hview[0] + 4;
_w=minimap_width;
_h=minimap_height;

draw_set_alpha(0.5);
c=c_dkgray;draw_rectangle_color(vx,vy,vx+_w,vy+_h,c,c,c,c,0);//back
draw_set_alpha(1);
//_px=((view_xview[0])*_w)/room_width;
//_py=(view_yview[0]*_h)/room_height;
//_pw=(view_wview[0]*_w)/room_width;
//_ph=(view_hview[0]*_h)/room_height;
//c=c_white;draw_rectangle_color(vx+_px,vy+_py + room_height/view_hview,vx+_px+_pw,vy+_py+_ph-5,c,c,c,c,1);

with(OBJ_PORTAL_PARENT){
if ob_on == 0{
_x=((x-(sprite_width/2))*240)/room_width;
_y=(y*135)/room_height;

var part_x,_xx,part_w,_ww;
_xx = (view_xview[0] + view_wview - 240 + _x - 4);
_ww = (view_xview[0] + view_wview - 240 + _x - 4 + sprite_width/(room_width/240));
if _xx &lt; (view_xview[0]+view_wview - 240 - 4)
part_x = _xx - (view_xview[0]+view_wview - 240 - 4)
else
part_x = 0;

if _ww &gt; (view_xview[0]+view_wview - 4)
part_w = _ww - (view_xview[0]+view_wview - 4)
else
part_w = 0;


draw_rectangle_colour(_xx-part_x,view_yview[0]+_y + 4,
_ww-part_w,view_yview[0]+_y + 4+sprite_height/(room_height/135),c_aqua,c_aqua,c_aqua,c_aqua,0);
}
}

with(O_Block_empty_parent){
_x=(x*240)/room_width;
_y=(y*135)/room_height;

var part_x,_xx,part_w,_ww;
_xx = (view_xview[0] + view_wview - 240 + _x - 4);
_ww = (view_xview[0] + view_wview - 240 + _x - 4 + sprite_width/(room_width/240));
if _xx &lt; (view_xview[0]+view_wview - 240 - 4)
part_x = _xx - (view_xview[0]+view_wview - 240 - 4)
else
part_x = 0;

if _ww &gt; (view_xview[0]+view_wview - 4)
part_w = _ww - (view_xview[0]+view_wview - 4)
else
part_w = 0;


draw_rectangle_colour(_xx - part_x,view_yview[0]+_y + 4,
_ww - part_w,view_yview[0]+_y + 4+sprite_height/(room_height/135),c_green,c_green,c_green,c_green,0);
}

with(O_ENEMY_P){
if x + sprite_width/2 &gt; 0 &amp;&amp; y + sprite_height/2 &gt;0 &amp;&amp; x - sprite_width/2&lt;room_width &amp;&amp; y - sprite_height/2 &lt; room_height{
_x=(x*240)/room_width;
_y=(y*135)/room_height;
//draw_point_color(vx+_x,vy+_y + 4,c_yellow);

var part_x,_xx,part_w,_ww;
_xx = (view_xview[0] + view_wview - 240 + _x - 4 - 3);
_ww = (view_xview[0] + view_wview - 240 + _x - 4 + 3);
if _xx &lt; (view_xview[0]+view_wview - 240 - 4)
part_x = _xx - (view_xview[0]+view_wview - 240 - 4)
else
part_x = 0;

if _ww &gt; (view_xview[0]+view_wview - 4)
part_w = _ww - (view_xview[0]+view_wview - 4)
else
part_w = 0;

draw_rectangle_colour(_xx-part_x,view_yview[0]+_y + 4-9 +(sprite_height/2)/(room_height/135),
_ww - part_w,view_yview[0]+_y + 4 - 1+(sprite_height/2)/(room_height/135),c_red,c_red,c_red,c_red,0);
}}

with(O_Block_Parent){
_x=(x*240)/room_width;
_y=(y*135)/room_height;

var part_x,_xx,part_w,_ww;
_xx = (view_xview[0] + view_wview - 240 + _x - 4);
_ww = (view_xview[0] + view_wview - 240 + _x - 4 + sprite_width/(room_width/240));
if _xx &lt; (view_xview[0]+view_wview - 240 - 4)
part_x = _xx - (view_xview[0]+view_wview - 240 - 4)
else
part_x = 0;

if _ww &gt; (view_xview[0]+view_wview - 4)
part_w = _ww - (view_xview[0]+view_wview - 4)
else
part_w = 0;


draw_rectangle_colour(_xx-part_x,view_yview[0]+_y + 4,
_ww-part_w,view_yview[0]+_y + 4+sprite_height/(room_height/135),c_white,c_white,c_white,c_white,0);

}

with(O_Player_P){
if x + sprite_width/2 &gt; 0 &amp;&amp; y + sprite_height/2 &gt;0 &amp;&amp; x - sprite_width/2&lt;room_width &amp;&amp; y - sprite_height/2 &lt; room_height{
_x=(x*240)/room_width;
_y=(y*135)/room_height;
//draw_point_color(vx+_x,vy+_y + 4,c_yellow);
var part_x,_xx,part_w,_ww;
_xx = (view_xview[0] + view_wview - 240 + _x - 4 - 3);
_ww = (view_xview[0] + view_wview - 240 + _x - 4 + 3);
if _xx &lt; (view_xview[0]+view_wview - 240 - 4)
part_x = _xx - (view_xview[0]+view_wview - 240 - 4)
else
part_x = 0;

if _ww &gt; (view_xview[0]+view_wview - 4)
part_w = _ww - (view_xview[0]+view_wview - 4)
else
part_w = 0;


draw_rectangle_colour(_xx - part_x,view_yview[0]+_y + 4 - 9+(sprite_height/2)/(room_height/135),
view_xview[0] + view_wview - 240 + _x - 4 + 3 - part_w,view_yview[0]+_y + 4 - 1+(sprite_height/2)/(room_height/135),c_yellow,c_yellow,c_yellow,c_yellow,0);
}}
for(i=0;i&lt;1;i++){
c=c_black;draw_rectangle_color(vx-i,vy-i,vx+_w+i,vy+_h+i,c,c,c,c,1);//outline
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(O_ENEMY_P){instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if minimap_on &lt; 2{
minimap_on += 1;
}else{
minimap_on = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
